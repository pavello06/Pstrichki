Unit GameUnit;

Interface

Uses
    Winapi.Windows,
    System.Classes, System.SysUtils,
    Vcl.Controls, Vcl.ExtCtrls, Vcl.Forms, Vcl.Graphics, Vcl.Imaging.pngimage,
    Vcl.MPlayer, Vcl.StdCtrls,
    FrontEndGameUnit, BackEndGameUnit, CheckerListUnit,
    StartUnit, PauseUnit, WinUnit;

Type
    TGameForm = Class(TForm)
        BackgroundImage: TImage;
        BoardImage: TImage;
        MovingTimer: TTimer;
        TurnTeamLabel: TLabel;
        PauseImage: TImage;
        LightCountLabel: TLabel;
        DarkCountLabel: TLabel;
        PowerImage: TImage;
        RotateImage: TImage;
        BackgroundMediaPlayer: TMediaPlayer;

        Procedure FormCreate(Sender: TObject);
        Procedure FormDestroy(Sender: TObject);
        Procedure FormShow(Sender: TObject);
        Procedure FormCloseQuery(Sender: TObject; Var CanClose: Boolean);
        Function FormHelp(Command: Word; Data: NativeInt; Var CallHelp: Boolean): Boolean;

        Procedure BoardImageMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
        Procedure BoardImageMouseMove(Sender: TObject; Shift: TShiftState; X, Y: Integer);
        Procedure BoardImageMouseUp(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);

        Procedure MovingTimerTimer(Sender: TObject);

        Procedure PauseImageClick(Sender: TObject);
        Procedure RotateImageClick(Sender: TObject);
        Procedure BackgroundMediaPlayerNotify(Sender: TObject);
    Private
        { Private declarations }
    Public
        { Public declarations }
    End;

Var
    GameForm: TGameForm;
    TurnTeam: TTeam = Light;

Procedure StartGame();

Implementation

{$R *.dfm}

Function IsExistFiles() : Boolean;
Begin
    Result := FileExists('Audio/Background.mp3') And 
              FileExists('Images/AudioOn.png') And
              FileExists('Images/AudioOn.png');
End;


Procedure StartGame();
Begin
    CreateCheckers();
    DrawBoardAndCheckers();

    TurnTeam := Light;
    With GameForm Do
    Begin
        TurnTeamLabel.Font.Color := clWhite;
        TurnTeamLabel.Caption := 'Ход команды белых';
        LightCountLabel.Caption := IntToStr(CheckerList.LightCount);
        DarkCountLabel.Caption := IntToStr(CheckerList.DarkCount);
    End;

    DrawPower(0, 0, 0, 0);
End;

Procedure FinishGame();
Begin
    WinForm.Visible := True;

    ClearCheckers();

    StartGame();
End;


Procedure TGameForm.FormCreate(Sender: TObject);
Begin
    If IsExistFiles() Then
    Begin
        BackgroundMediaPlayer.FileName := 'Audio/Background.mp3';
        BackgroundMediaPlayer.Open;

        CheckerList.Initialize();
        CalculateSizes();

        StartGame();
    End
    Else
        Application.MessageBox('Вы удалили файлы игры, попробуйте переустановить игру.', 'Ошибка', MB_OK + MB_ICONERROR);
End;

Procedure TGameForm.FormDestroy(Sender: TObject);
Begin
    BackgroundMediaPlayer.Close;

    ClearCheckers();
End;

Procedure TGameForm.FormShow(Sender: TObject);
Begin
    If IsExistFiles() Then
        StartForm.Visible := True
    Else
        Application.Terminate;
End;

Procedure TGameForm.FormCloseQuery(Sender: TObject; Var CanClose: Boolean);
Var
    Confirmation: Integer;
Begin
    Confirmation := Application.MessageBox('Вы действительно хотите выйти?', 'Выход', MB_YESNO + MB_ICONQUESTION + MB_DEFBUTTON2);
    CanClose := Confirmation = IDYES;
End;

Function TGameForm.FormHelp(Command: Word; Data: NativeInt; Var CallHelp: Boolean): Boolean;
Begin
    CallHelp := False;
    FormHelp := False;
End;


Procedure TGameForm.BoardImageMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
Var
    ClickPosition: TPosition;
Begin
    If Button =TMouseButton.mbLeft Then
    Begin
        ClickPosition.X := X;
        ClickPosition.Y := Y;
        CheckerMouseDown(ClickPosition);

        DrawPower(0, 0, 0, 0);
    End;
End;

Procedure TGameForm.BoardImageMouseMove(Sender: TObject; Shift: TShiftState; X, Y: Integer);
Begin
    If Not IsMoving And (ClickedChecker <> Nil) Then
    Begin
        DrawBoardAndCheckers();
        DrawArrow(MouseDownPosition.X, MouseDownPosition.Y, X, Y);
        DrawPower(MouseDownPosition.X, MouseDownPosition.Y, X, Y);
    End;
End;

Procedure TGameForm.BoardImageMouseUp(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
Var
    ClickPosition: TPosition;
Begin
    If Button =TMouseButton.mbLeft Then
    Begin
        ClickPosition.X := X;
        ClickPosition.Y := Y;
        CheckerMouseUp(ClickPosition);

        DrawPower(0, 0, 0, 0);
    End;
End;


Procedure ChangeTurnTeam();
Begin
    If TurnTeam = Light Then
    Begin
        TurnTeam := Dark;
        GameForm.TurnTeamLabel.Caption := 'Ход команды черных';
        GameForm.TurnTeamLabel.Font.Color := clBlack;
    End
    Else
    Begin
        TurnTeam := Light;
        GameForm.TurnTeamLabel.Caption := 'Ход команды белых';
        GameForm.TurnTeamLabel.Font.Color := clWhite;
    End;
End;


Procedure TGameForm.MovingTimerTimer(Sender: TObject);
Begin
    CalculateCheckersParametrs();
    CalculateCollision();
    CalculateOverlapping();
    DeleteCheckers();
    DrawBoardAndCheckers();

    LightCountLabel.Caption := IntToStr(CheckerList.LightCount);
    DarkCountLabel.Caption := IntToStr(CheckerList.DarkCount);

    If AreCheckersStopped() Then
    Begin
        StopMoving();

        ChangeTurnTeam();

        If (CheckerList.LightCount = 0) Or (CheckerList.DarkCount = 0) Then
            FinishGame();
    End;
End;


Procedure TGameForm.PauseImageClick(Sender: TObject);
Begin
    PauseForm.Visible := True;
End;

Procedure TGameForm.RotateImageClick(Sender: TObject);
Begin
    If Not IsMoving And (ClickedChecker = Nil) Then
    Begin
        RotateBoardAndCheckers();
        DrawBoardAndCheckers();
    End;
End;


Procedure TGameForm.BackgroundMediaPlayerNotify(Sender: TObject);
Begin
    If (BackgroundMediaPlayer.NotifyValue = nvSuccessful) And
       (BackgroundMediaPlayer.Position = BackgroundMediaPlayer.Length) Then
        BackgroundMediaPlayer.Play;

End;

End.
